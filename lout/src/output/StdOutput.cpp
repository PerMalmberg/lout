//
// Created by Per Malmberg on 2016-05-21.
//

#include <iostream>
#include "output/StdOutput.h"


namespace lout {
namespace output {

//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
StdOutPrinter::StdOutPrinter( std::shared_ptr<formatting::IFormatter> formatter) :
		IOutput( formatter, &std::cerr )
{ }

//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
StdOutPrinter::StdOutPrinter( std::shared_ptr<formatting::IFormatter> formatter, std::ostream* fallbackStream ) :
		IOutput( formatter, fallbackStream )
{ }

//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void StdOutPrinter::LogActual(const loglevel::ILogLevel& level, const std::string& msg)
{
	std::cout << myFormatter->Format( level, msg ) << std::endl;
}

//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void StdOutPrinter::LogWithCategoryActual(const loglevel::ILogLevel& level, const std::string& category,
                                          const std::string& msg){
	std::cout << myFormatter->Format(level, category, msg ) << std::endl;
}

//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void StdOutPrinter::Flush() noexcept
{
	std::cout.flush();
}

}
}